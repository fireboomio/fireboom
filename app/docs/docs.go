// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/$modelName$": {
            "get": {
                "description": "\"查询列表\"",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "model名称",
                        "name": "dataNames",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            },
            "put": {
                "description": "\"更新\"",
                "parameters": [
                    {
                        "description": "#/definitions/$modelName$",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "type": "string",
                        "description": "操作名称[监听子属性使用]",
                        "name": "watchAction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            },
            "post": {
                "description": "\"新增数据\"",
                "parameters": [
                    {
                        "description": "#/definitions/$modelName$",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "新增成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/batch": {
            "put": {
                "description": "\"批量更新\"",
                "parameters": [
                    {
                        "description": "#/definitions/$modelName$",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "操作名称[监听子属性使用]",
                        "name": "watchAction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "批量更新成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            },
            "post": {
                "description": "\"批量新增\"",
                "parameters": [
                    {
                        "description": "#/definitions/$modelName$",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "是否覆盖已存在",
                        "name": "overwrite",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "批量新增结果",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/fileloader.DataBatchResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "description": "\"批量删除\"",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "数据名称",
                        "name": "dataNames",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "批量删除成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/checkConnection": {
            "post": {
                "description": "\"检查连接\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "description": "#/definitions/$modelName$",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/copy": {
            "post": {
                "description": "\"复制\"",
                "parameters": [
                    {
                        "description": "请求数据",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileloader.DataMutation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "复制成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/deleteParent/{dataName}": {
            "delete": {
                "description": "\"删除[ByParentDataName]\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "数据名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/export": {
            "get": {
                "description": "\"导出\"",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "dataNames",
                        "name": "dataNames",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "导出成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/import": {
            "post": {
                "description": "\"导入\"",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "文件",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "导入成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/listByRole": {
            "post": {
                "description": "\"ListByRole\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.paramQueryRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/listPublic": {
            "get": {
                "description": "\"ListPublic\"",
                "tags": [
                    "operation"
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/rename": {
            "post": {
                "description": "\"重命名\"",
                "parameters": [
                    {
                        "description": "请求数据",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileloader.DataMutation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "重命名成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/renameParent": {
            "post": {
                "description": "\"重命名[ByParentDataName]\"",
                "parameters": [
                    {
                        "description": "请求数据",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileloader.DataMutation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "重命名成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/single": {
            "get": {
                "description": "\"查询singleData\"",
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/tree": {
            "get": {
                "description": "\"查询树状图\"",
                "responses": {
                    "200": {
                        "description": "查询成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/fileloader.DataTree"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/withLockUser": {
            "get": {
                "description": "\"带锁查询singleData\"",
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "$ref": "#/definitions/fileloader.DataWithLockUser_data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/withLockUser/{dataName}": {
            "get": {
                "description": "\"带锁查询\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "$ref": "#/definitions/fileloader.DataWithLockUser_data"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/$modelName$/{dataName}": {
            "get": {
                "description": "\"查询\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "model名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "#/definitions/$modelName$",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "description": "\"删除\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "数据名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/datasource/dmmf/{dataName}": {
            "get": {
                "description": "\"获取dmmf\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "model名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "重载dmmf",
                        "name": "reload",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "dmmf",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/datasource/graphql/{dataName}": {
            "get": {
                "description": "\"获取graphql文本\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "model名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "graphql文本",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/datasource/graphqlQuery/{dataName}": {
            "post": {
                "description": "\"graphqlQuery\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "graphql query",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/datasource/migrate/{dataName}": {
            "post": {
                "description": "\"迁移\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "model名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "迁移数据",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "prisma文本",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/datasource/prisma/{dataName}": {
            "get": {
                "description": "\"获取prisma文本\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "model名称",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "prisma文本",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            },
            "post": {
                "description": "\"updatePrismaText\"",
                "tags": [
                    "datasource"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "文本",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/engine/restart": {
            "get": {
                "description": "\"引擎重启\"",
                "tags": [
                    "engine"
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    }
                }
            }
        },
        "/engine/swagger": {
            "get": {
                "description": "\"引擎swagger.json\"",
                "tags": [
                    "engine"
                ],
                "responses": {
                    "200": {
                        "description": "成功"
                    }
                }
            }
        },
        "/env/getEnvValue/{key}": {
            "get": {
                "description": "\"GetEnvValue\"",
                "tags": [
                    "env"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/globalOperation/authenticationHookOptions": {
            "get": {
                "description": "\"authenticationHookOptions\"",
                "tags": [
                    "globalOperation"
                ],
                "responses": {
                    "200": {
                        "description": "authenticationHookOptions配置",
                        "schema": {
                            "$ref": "#/definitions/models.HookOptions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/globalOperation/httpTransportHookOptions": {
            "get": {
                "description": "\"httpTransportHookOptions\"",
                "tags": [
                    "globalOperation"
                ],
                "responses": {
                    "200": {
                        "description": "httpTransportHookOptions配置",
                        "schema": {
                            "$ref": "#/definitions/models.HookOptions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/home": {
            "get": {
                "description": "\"首页统计数据\"",
                "tags": [
                    "home"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.homeStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/operation/bindRoles": {
            "post": {
                "description": "\"BindRoles\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.paramBindRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/operation/function/{dataName}": {
            "post": {
                "description": "\"updateFunctionText\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "文本",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/operation/graphql/{dataName}": {
            "get": {
                "description": "\"GetGraphqlText\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "\"UpdateGraphqlText\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "文本",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/operation/hookOptions/{dataName}": {
            "get": {
                "description": "\"getHookOptions\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "hook配置",
                        "schema": {
                            "$ref": "#/definitions/models.HookOptions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/operation/proxy/{dataName}": {
            "post": {
                "description": "\"updateProxyText\"",
                "tags": [
                    "operation"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "文本",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/sdk/downloadOutput/{dataName}": {
            "get": {
                "description": "\"下载生成output压缩包\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "下载成功"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/sdk/enabledServer": {
            "get": {
                "description": "\"开启的服务端钩子\"",
                "tags": [
                    "sdk"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Sdk"
                        }
                    }
                }
            }
        },
        "/storage/hookOptions/{dataName}": {
            "get": {
                "description": "\"getHookOptions\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "hook配置",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/models.HookOptions"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/ping": {
            "post": {
                "description": "\"ping\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Storage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/detail": {
            "get": {
                "description": "\"详情\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StorageFile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/download": {
            "get": {
                "description": "\"下载\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StorageFile"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/list": {
            "get": {
                "description": "\"存储列表\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dirname",
                        "name": "dirname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StorageFile"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/mkdir": {
            "post": {
                "description": "\"创建目录\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dirname",
                        "name": "dirname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/remove": {
            "post": {
                "description": "\"移除\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/rename": {
            "post": {
                "description": "\"重命名\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DataMutation",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fileloader.DataMutation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/storageClient/{dataName}/upload": {
            "post": {
                "description": "\"上传\"",
                "tags": [
                    "storage"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "dataName",
                        "name": "dataName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dirname",
                        "name": "dirname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/system/directories": {
            "get": {
                "description": "\"获取所有配置目录\"",
                "tags": [
                    "system"
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/system/proxy": {
            "get": {
                "description": "\"代理请求\"",
                "tags": [
                    "system"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "请求url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/i18n.CustomError"
                        }
                    }
                }
            }
        },
        "/vscode/copy": {
            "post": {
                "description": "将旧URI重命名为新URI。如果overwrite为true，则覆盖同名文件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "source",
                        "name": "source",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "destination",
                        "name": "destination",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "是否覆盖同名文件",
                        "name": "overwrite",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "复制成功"
                    },
                    "400": {
                        "description": "复制失败"
                    }
                }
            }
        },
        "/vscode/createDirectory": {
            "post": {
                "description": "创建一个新目录",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "URI",
                        "name": "uri",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "创建成功"
                    },
                    "400": {
                        "description": "创建失败"
                    }
                }
            }
        },
        "/vscode/delete": {
            "delete": {
                "description": "删除指定URI的文件或目录。如果recursive为true，则删除所有子目录和文件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "URI",
                        "name": "uri",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "是否删除所有子目录和文件",
                        "name": "recursive",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功"
                    },
                    "400": {
                        "description": "删除失败"
                    }
                }
            }
        },
        "/vscode/readDirectory": {
            "get": {
                "description": "返回指定URI下的所有文件和目录的元数据",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "URI",
                        "name": "uri",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "忽略不存在报错",
                        "name": "ignoreNotExist",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "查询成功",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vscode.FileStat"
                            }
                        }
                    },
                    "400": {
                        "description": "查询失败"
                    }
                }
            }
        },
        "/vscode/readFile": {
            "get": {
                "description": "返回指定URI的文件内容",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "URI",
                        "name": "uri",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "查询成功",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "查询失败"
                    }
                }
            }
        },
        "/vscode/rename": {
            "put": {
                "description": "将旧URI重命名为新URI。如果overwrite为true，则覆盖同名文件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "oldURI",
                        "name": "oldURI",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "newURI",
                        "name": "newURI",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "是否覆盖同名文件",
                        "name": "overwrite",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功"
                    },
                    "400": {
                        "description": "删除失败"
                    }
                }
            }
        },
        "/vscode/stat": {
            "get": {
                "description": "返回指定URI的文件元数据",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "URI",
                        "name": "uri",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "查询成功",
                        "schema": {
                            "$ref": "#/definitions/vscode.FileStat"
                        }
                    },
                    "400": {
                        "description": "查询失败"
                    }
                }
            }
        },
        "/vscode/writeFile": {
            "post": {
                "description": "将content写入指定URI的文件中。如果create为true，则在文件不存在的情况下创建文件；如果overwrite",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "vscode"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "URI",
                        "name": "uri",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "URI",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "create",
                        "name": "create",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "overwrite",
                        "name": "overwrite",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "写入成功"
                    },
                    "400": {
                        "description": "写入失败"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.authenticationStatistics": {
            "type": "object",
            "properties": {
                "authenticationTotal": {
                    "type": "integer"
                },
                "userTodayAdd": {
                    "type": "integer"
                },
                "userTotal": {
                    "type": "integer"
                }
            }
        },
        "api.datasourceStatistics": {
            "type": "object",
            "properties": {
                "customizeTotal": {
                    "type": "integer"
                },
                "databaseTotal": {
                    "type": "integer"
                },
                "graphqlTotal": {
                    "type": "integer"
                },
                "restTotal": {
                    "type": "integer"
                }
            }
        },
        "api.homeStatistics": {
            "type": "object",
            "properties": {
                "authentication": {
                    "$ref": "#/definitions/api.authenticationStatistics"
                },
                "dataSource": {
                    "$ref": "#/definitions/api.datasourceStatistics"
                },
                "operation": {
                    "$ref": "#/definitions/api.operationStatistics"
                },
                "storage": {
                    "$ref": "#/definitions/api.storageStatistics"
                }
            }
        },
        "api.operationStatistics": {
            "type": "object",
            "properties": {
                "liveQueryTotal": {
                    "type": "integer"
                },
                "mutationTotal": {
                    "type": "integer"
                },
                "queryTotal": {
                    "type": "integer"
                },
                "subscriptionTotal": {
                    "type": "integer"
                }
            }
        },
        "api.paramBindRole": {
            "type": "object",
            "properties": {
                "operationPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rbacType": {
                    "type": "string"
                },
                "roleCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.paramQueryRole": {
            "type": "object",
            "properties": {
                "rbacType": {
                    "type": "string"
                },
                "roleCode": {
                    "type": "string"
                }
            }
        },
        "api.storageStatistics": {
            "type": "object",
            "properties": {
                "memoryTotal": {
                    "type": "integer"
                },
                "memoryUsed": {
                    "type": "integer"
                },
                "storageTotal": {
                    "type": "integer"
                }
            }
        },
        "fileloader.DataBatchResult": {
            "type": "object",
            "properties": {
                "dataName": {
                    "type": "string"
                },
                "succeed": {
                    "type": "boolean"
                }
            }
        },
        "fileloader.DataMutation": {
            "type": "object",
            "properties": {
                "dst": {
                    "type": "string"
                },
                "overload": {
                    "type": "boolean"
                },
                "src": {
                    "type": "string"
                }
            }
        },
        "fileloader.DataTree": {
            "type": "object",
            "properties": {
                "extension": {
                    "type": "string"
                },
                "extra": {},
                "isDir": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fileloader.DataTree"
                    }
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "fileloader.DataWithLockUser_data": {
            "type": "object",
            "properties": {
                "data": {},
                "user": {
                    "type": "string"
                }
            }
        },
        "i18n.CustomError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "错误码",
                    "allOf": [
                        {
                            "$ref": "#/definitions/i18n.Errcode"
                        }
                    ]
                },
                "message": {
                    "description": "错误消息",
                    "type": "string"
                },
                "mode": {
                    "description": "业务模块",
                    "type": "string"
                }
            }
        },
        "i18n.Errcode": {
            "type": "integer",
            "enum": [
                10101,
                10201,
                10202,
                10203,
                10204,
                10205,
                10206,
                10207,
                10301,
                10302,
                10303,
                10304,
                10305,
                10401,
                10402,
                10403,
                10404,
                10405,
                10406,
                10407,
                10501,
                10502,
                10503,
                10504,
                10505,
                10506,
                10507,
                10508,
                10509,
                10510,
                10511,
                10512,
                10513,
                10514,
                10515,
                10516,
                10517,
                10518,
                10519,
                10520,
                10521,
                10601,
                10602,
                10603,
                10604,
                10605,
                10606,
                20101,
                10102,
                20201,
                20202,
                20203,
                20204,
                20205,
                20206,
                20207,
                20208,
                20209,
                20210,
                20211,
                20301,
                20302,
                20303,
                20304,
                20305,
                20306,
                20307,
                20401,
                20402,
                20403,
                20404,
                20405,
                20406,
                20407,
                20408,
                20409,
                20501,
                20502,
                20601,
                20701
            ],
            "x-enum-varnames": [
                "ServerError",
                "ParamIllegalError",
                "ParamBindError",
                "StructParamEmtpyError",
                "BodyParamEmptyError",
                "PathParamEmptyError",
                "QueryParamEmptyError",
                "FormParamEmptyError",
                "RequestResubmitError",
                "RequestSignatureError",
                "RequestReadBodyError",
                "RequestEmptyBodyError",
                "RequestProxyError",
                "FileReadError",
                "FileWriteError",
                "FileZipError",
                "FileUnZipError",
                "FileZipAmountZeroError",
                "FileContentEmptyError",
                "DirectoryReadError",
                "LoaderFileReadError",
                "LoaderFileNotExistError",
                "LoaderFileUnmarshalError",
                "LoaderDataExistEditorError",
                "LoaderDataExistError",
                "LoaderDataNotExistError",
                "LoaderLockNotFoundError",
                "LoaderWatcherNotSupport",
                "LoaderNoneModifiedError",
                "LoaderRWNotSupportError",
                "LoaderNameEmptyError",
                "LoaderBasenameEmptyErr",
                "LoaderRootOrExtensionEmptyErr",
                "LoaderMultipleOnlyError",
                "LoaderEmbedNotAllowModifyErr",
                "LoaderRemoveKeyNotFoundError",
                "LoaderRenameKeyNotFoundError",
                "LoaderRenameTargetExistError",
                "LoaderRenameNotAllowMultipleError",
                "LoaderWriteableRelyModelRequiredError",
                "LoaderDataFilepathError",
                "VscodeOnlyDirectoriesCanWatchError",
                "VscodeDirectoryExistError",
                "VscodeFileExistError",
                "VscodeFileNotExistError",
                "VscodeSourceNotDirectoryError",
                "VscodeTargetDirectoryExistError",
                "EngineCreateConfigError",
                "EngineRestartError",
                "DataInsertError",
                "DataDeleteError",
                "DataUpdateError",
                "DataSelectError",
                "DataCopyError",
                "DataRenameError",
                "DataBatchInsertError",
                "DataBatchDeleteError",
                "DataBatchUpdateError",
                "DataEmptyListError",
                "DataNotExistsError",
                "DatasourceConnectionError",
                "DatasourceKindNotSupportedError",
                "DatasourceDisabledError",
                "DatasourceDatabaseUrlEmptyError",
                "DatabaseOasVersionError",
                "PrismaQueryError",
                "PrismaMigrateError",
                "StoragePingError",
                "StorageDisabledError",
                "StorageMkdirError",
                "StorageTouchError",
                "StorageRemoveError",
                "StorageRenameError",
                "StorageListError",
                "StorageDetailError",
                "StorageDownloadError",
                "OperationRoleHasBindError",
                "OperationRbacTypeError",
                "SettingServerUrlEmptyError",
                "SdkAlreadyUpToDateError"
            ]
        },
        "models.HookOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/models.hookOption"
            }
        },
        "models.Sdk": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "codePackage": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "deleteTime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "extension": {
                    "type": "string"
                },
                "gitBranch": {
                    "type": "string"
                },
                "gitCommitHash": {
                    "type": "string"
                },
                "gitUrl": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.sdkType"
                },
                "updateTime": {
                    "type": "string"
                },
                "upperFirstBasename": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.Storage": {
            "type": "object",
            "properties": {
                "accessKeyID": {
                    "$ref": "#/definitions/wgpb.ConfigurationVariable"
                },
                "bucketLocation": {
                    "$ref": "#/definitions/wgpb.ConfigurationVariable"
                },
                "bucketName": {
                    "$ref": "#/definitions/wgpb.ConfigurationVariable"
                },
                "createTime": {
                    "type": "string"
                },
                "deleteTime": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endpoint": {
                    "$ref": "#/definitions/wgpb.ConfigurationVariable"
                },
                "name": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "$ref": "#/definitions/wgpb.ConfigurationVariable"
                },
                "updateTime": {
                    "type": "string"
                },
                "uploadProfiles": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/wgpb.S3UploadProfile"
                    }
                },
                "useSSL": {
                    "type": "boolean"
                }
            }
        },
        "models.StorageFile": {
            "type": "object",
            "properties": {
                "contentType": {
                    "description": "A standard MIME type describing the format of the object data.",
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "lastModified": {
                    "description": "Date and time the object was last modified.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the object",
                    "type": "string"
                },
                "signedUrl": {
                    "type": "string"
                },
                "size": {
                    "description": "Size in bytes of the object.",
                    "type": "integer"
                }
            }
        },
        "models.hookOption": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "existed": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "models.sdkType": {
            "type": "string",
            "enum": [
                "client",
                "server"
            ],
            "x-enum-varnames": [
                "SdkClient",
                "SdkServer"
            ]
        },
        "vscode.FileStat": {
            "type": "object",
            "properties": {
                "ctime": {
                    "type": "integer"
                },
                "mtime": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/vscode.FileType"
                }
            }
        },
        "vscode.FileType": {
            "type": "integer",
            "enum": [
                1,
                2,
                64
            ],
            "x-enum-varnames": [
                "File",
                "Directory",
                "SymbolicLink"
            ]
        },
        "wgpb.ConfigurationVariable": {
            "type": "object",
            "properties": {
                "environmentVariableDefaultValue": {
                    "description": "[omitempty]",
                    "type": "string"
                },
                "environmentVariableName": {
                    "description": "[omitempty]",
                    "type": "string"
                },
                "kind": {
                    "$ref": "#/definitions/wgpb.ConfigurationVariableKind"
                },
                "placeholderVariableName": {
                    "description": "[omitempty]",
                    "type": "string"
                },
                "staticVariableContent": {
                    "description": "[omitempty]",
                    "type": "string"
                }
            }
        },
        "wgpb.ConfigurationVariableKind": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "ConfigurationVariableKind_STATIC_CONFIGURATION_VARIABLE",
                "ConfigurationVariableKind_ENV_CONFIGURATION_VARIABLE",
                "ConfigurationVariableKind_PLACEHOLDER_CONFIGURATION_VARIABLE"
            ]
        },
        "wgpb.S3UploadProfile": {
            "type": "object",
            "properties": {
                "allowedFileExtensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedMimeTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hooks": {
                    "$ref": "#/definitions/wgpb.S3UploadProfileHooksConfiguration"
                },
                "maxAllowedFiles": {
                    "type": "integer"
                },
                "maxAllowedUploadSizeBytes": {
                    "type": "integer"
                },
                "metadataJSONSchema": {
                    "type": "string"
                },
                "requireAuthentication": {
                    "type": "boolean"
                }
            }
        },
        "wgpb.S3UploadProfileHooksConfiguration": {
            "type": "object",
            "properties": {
                "postUpload": {
                    "type": "boolean"
                },
                "preUpload": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
